// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Generator.EmfSample.Templates
{
    using au.com.JackBot2MetaModel;
    using Generator.Core.Templates;
    using Emf.Utility;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class EntityTemplate : AbstractTemplate<Entity>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("This is an entity called ");
            
            #line 5 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.getName()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nIt has the following attributes:\r\n");
            
            #line 8 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
 foreach (var attribute in Model.getAttributes().GetEnumerable<au.com.JackBot2MetaModel.Attribute>()) { 
            
            #line default
            #line hidden
            this.Write("- ");
            
            #line 9 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.getName()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 10 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nAll NamedObjects are:\r\n");
            
            #line 13 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
 foreach (var namedObject in _namedObjects) { 
            
            #line default
            #line hidden
            this.Write("* ");
            
            #line 14 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(namedObject.getName() ?? "Nothing"));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 15 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 16 "C:\Users\WM\personal\CodeGenerator\Generator.EmfSample\Templates\EntityTemplate.tt"

    private readonly IEnumerable<Entity> _entities;
    private readonly IEnumerable<NamedObject> _namedObjects;

    public override string OutputPath => $"{Model.getName()}.txt";

    public override IEnumerable<Entity> MapObjects() => _entities;

    public EntityTemplate(IEnumerable<Entity> entities, IEnumerable<NamedObject> namedObjects)
    {
        _entities = entities;
        _namedObjects = namedObjects;
    }

        
        #line default
        #line hidden
    }
    
}

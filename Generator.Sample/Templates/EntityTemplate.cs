// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Generator.Sample.Templates
{
    using System.Collections.Generic;
    using Sample.Metamodel;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class EntityTemplate : EntityTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("The name of my entity is ");
            
            #line 4 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            
            #line default
            #line hidden
            this.Write("\r\nAnd the attributes are:\r\n");
            
            #line 6 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	foreach (var attribute in Model.Attributes)
	{

            
            #line default
            #line hidden
            this.Write("\tName: ");
            
            #line 10 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(", Type: ");
            
            #line 10 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.GetType().Name));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 11 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\nIncoming:\r\n");
            
            #line 16 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	foreach (var reference in Model.IncomingReferences)
	{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 20 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(reference.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 20 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(reference.OppositeName));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 20 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(reference.GetType()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 21 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\nOutgoing:\r\n");
            
            #line 26 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	foreach (var reference in Model.OutgoingReferences)
	{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 30 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(reference.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 30 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(reference.OppositeName));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 30 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(reference.GetType()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 31 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 35 "C:\Users\Jack\repo\CodeGenerator\Generator.Sample\Templates\EntityTemplate.tt"

	public override string OutputPath => $"Models/{Model.Name}.cs";

	public EntityTemplate(IEnumerable<Entity> entities) : base(entities)
	{
	}

        
        #line default
        #line hidden
    }
    
}
